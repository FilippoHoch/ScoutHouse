{
  "openapi": "3.1.0",
  "info": {
    "title": "ScoutHouse API",
    "version": "0.2.0"
  },
  "paths": {
    "/api/v1/health/live": {
      "get": {
        "tags": [
          "health",
          "health"
        ],
        "summary": "Live",
        "description": "Simple liveness probe.",
        "operationId": "live_api_v1_health_live_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Live Api V1 Health Live Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/health/ready": {
      "get": {
        "tags": [
          "health",
          "health"
        ],
        "summary": "Ready",
        "description": "Readiness probe verifying database connectivity and migrations.",
        "operationId": "ready_api_v1_health_ready_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Ready Api V1 Health Ready Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Register",
        "operationId": "register_api_v1_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login",
        "operationId": "login_api_v1_auth_login_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/forgot-password": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Forgot Password",
        "operationId": "forgot_password_api_v1_auth_forgot_password_post",
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/reset-password": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Reset Password",
        "operationId": "reset_password_api_v1_auth_reset_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/refresh": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Refresh",
        "operationId": "refresh_api_v1_auth_refresh_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Logout",
        "operationId": "logout_api_v1_auth_logout_post",
        "responses": {
          "204": {
            "description": "Successful Response"
          }
        }
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Get Me",
        "operationId": "get_me_api_v1_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/attachments/": {
      "get": {
        "tags": [
          "attachments",
          "attachments"
        ],
        "summary": "List Attachments",
        "operationId": "list_attachments_api_v1_attachments__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "owner_type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AttachmentOwnerType",
              "description": "Attachment owner type"
            },
            "description": "Attachment owner type"
          },
          {
            "name": "owner_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "exclusiveMinimum": 0,
              "description": "Attachment owner id",
              "title": "Owner Id"
            },
            "description": "Attachment owner id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttachmentRead"
                  },
                  "title": "Response List Attachments Api V1 Attachments  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/attachments/sign-put": {
      "post": {
        "tags": [
          "attachments",
          "attachments"
        ],
        "summary": "Sign Attachment Upload",
        "operationId": "sign_attachment_upload_api_v1_attachments_sign_put_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentSignRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentUploadSignature"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/attachments/confirm": {
      "post": {
        "tags": [
          "attachments",
          "attachments"
        ],
        "summary": "Confirm Attachment",
        "operationId": "confirm_attachment_api_v1_attachments_confirm_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentConfirmRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/attachments/{attachment_id}/sign-get": {
      "get": {
        "tags": [
          "attachments",
          "attachments"
        ],
        "summary": "Sign Attachment Download",
        "operationId": "sign_attachment_download_api_v1_attachments__attachment_id__sign_get_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "attachment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Attachment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentDownloadSignature"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/attachments/{attachment_id}": {
      "delete": {
        "tags": [
          "attachments",
          "attachments"
        ],
        "summary": "Delete Attachment",
        "operationId": "delete_attachment_api_v1_attachments__attachment_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "attachment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Attachment Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/import/structures": {
      "post": {
        "tags": [
          "import"
        ],
        "summary": "Import Structures",
        "operationId": "import_structures_api_v1_import_structures_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "dry_run",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Dry Run"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_import_structures_api_v1_import_structures_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Import Structures Api V1 Import Structures Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/import/structure-open-periods": {
      "post": {
        "tags": [
          "import"
        ],
        "summary": "Import Structure Open Periods",
        "operationId": "import_structure_open_periods_api_v1_import_structure_open_periods_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "dry_run",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Dry Run"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_import_structure_open_periods_api_v1_import_structure_open_periods_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Import Structure Open Periods Api V1 Import Structure Open Periods Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/templates/structures.xlsx": {
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "Get Structures Template Xlsx",
        "operationId": "get_structures_template_xlsx_api_v1_templates_structures_xlsx_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/templates/structures.csv": {
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "Get Structures Template Csv",
        "operationId": "get_structures_template_csv_api_v1_templates_structures_csv_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/templates/structure-open-periods.xlsx": {
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "Get Structure Open Periods Template Xlsx",
        "operationId": "get_structure_open_periods_template_xlsx_api_v1_templates_structure_open_periods_xlsx_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/templates/structure-open-periods.csv": {
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "Get Structure Open Periods Template Csv",
        "operationId": "get_structure_open_periods_template_csv_api_v1_templates_structure_open_periods_csv_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/structures/": {
      "get": {
        "tags": [
          "structures"
        ],
        "summary": "List Structures",
        "operationId": "list_structures_api_v1_structures__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/StructureRead"
                  },
                  "type": "array",
                  "title": "Response List Structures Api V1 Structures  Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "structures"
        ],
        "summary": "Create Structure",
        "operationId": "create_structure_api_v1_structures__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StructureCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StructureRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/structures/by-slug/{slug}": {
      "get": {
        "tags": [
          "structures"
        ],
        "summary": "Get Structure By Slug",
        "operationId": "get_structure_by_slug_api_v1_structures_by_slug__slug__get",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Slug"
            }
          },
          {
            "name": "include",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Include"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StructureRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/structures/search": {
      "get": {
        "tags": [
          "structures"
        ],
        "summary": "Search Structures",
        "operationId": "search_structures_api_v1_structures_search_get",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Q"
            }
          },
          {
            "name": "province",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 2,
                  "maxLength": 2
                },
                {
                  "type": "null"
                }
              ],
              "title": "Province"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/StructureType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Type"
            }
          },
          {
            "name": "season",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/StructureSeason"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Season"
            }
          },
          {
            "name": "unit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/StructureUnit"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Unit"
            }
          },
          {
            "name": "cost_band",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/CostBand"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cost Band"
            }
          },
          {
            "name": "max_km",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number",
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Km"
            }
          },
          {
            "name": "access",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access"
            }
          },
          {
            "name": "fire",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/FirePolicy"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Fire"
            }
          },
          {
            "name": "min_land_area",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number",
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Min Land Area"
            }
          },
          {
            "name": "hot_water",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Hot Water"
            }
          },
          {
            "name": "open_in_season",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/StructureOpenPeriodSeason"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Open In Season"
            }
          },
          {
            "name": "open_on_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Open On Date"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Page Size"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort"
            }
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StructureSearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/structures/{structure_id}": {
      "get": {
        "tags": [
          "structures"
        ],
        "summary": "Get Structure",
        "operationId": "get_structure_api_v1_structures__structure_id__get",
        "parameters": [
          {
            "name": "structure_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Structure Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StructureRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "structures"
        ],
        "summary": "Update Structure",
        "operationId": "update_structure_api_v1_structures__structure_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "structure_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Structure Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StructureUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StructureRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/structures/{structure_id}/contacts": {
      "get": {
        "tags": [
          "structures"
        ],
        "summary": "List Structure Contacts",
        "operationId": "list_structure_contacts_api_v1_structures__structure_id__contacts_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "structure_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Structure Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactRead"
                  },
                  "title": "Response List Structure Contacts Api V1 Structures  Structure Id  Contacts Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "structures"
        ],
        "summary": "Create Structure Contact",
        "operationId": "create_structure_contact_api_v1_structures__structure_id__contacts_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "structure_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Structure Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/structures/contacts/search": {
      "get": {
        "tags": [
          "structures"
        ],
        "summary": "Search Contacts",
        "operationId": "search_contacts_api_v1_structures_contacts_search_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "first_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "First Name"
            }
          },
          {
            "name": "last_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Last Name"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Email"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Phone"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactRead"
                  },
                  "title": "Response Search Contacts Api V1 Structures Contacts Search Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/structures/{structure_id}/contacts/{contact_id}": {
      "patch": {
        "tags": [
          "structures"
        ],
        "summary": "Update Structure Contact",
        "operationId": "update_structure_contact_api_v1_structures__structure_id__contacts__contact_id__patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "structure_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Structure Id"
            }
          },
          {
            "name": "contact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Contact Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "structures"
        ],
        "summary": "Delete Structure Contact",
        "operationId": "delete_structure_contact_api_v1_structures__structure_id__contacts__contact_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "structure_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Structure Id"
            }
          },
          {
            "name": "contact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Contact Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/structures/{structure_id}/availabilities": {
      "post": {
        "tags": [
          "structures"
        ],
        "summary": "Create Structure Availability",
        "operationId": "create_structure_availability_api_v1_structures__structure_id__availabilities_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "structure_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Structure Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StructureAvailabilityCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StructureAvailabilityRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "structures"
        ],
        "summary": "Upsert Structure Availabilities",
        "operationId": "upsert_structure_availabilities_api_v1_structures__structure_id__availabilities_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "structure_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Structure Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StructureAvailabilityUpdate"
                },
                "title": "Availabilities In"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StructureAvailabilityRead"
                  },
                  "title": "Response Upsert Structure Availabilities Api V1 Structures  Structure Id  Availabilities Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/structures/{structure_id}/cost-options": {
      "post": {
        "tags": [
          "structures"
        ],
        "summary": "Create Structure Cost Option",
        "operationId": "create_structure_cost_option_api_v1_structures__structure_id__cost_options_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "structure_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Structure Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StructureCostOptionCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StructureCostOptionRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "structures"
        ],
        "summary": "Upsert Structure Cost Options",
        "operationId": "upsert_structure_cost_options_api_v1_structures__structure_id__cost_options_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "structure_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Structure Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StructureCostOptionUpdate"
                },
                "title": "Cost Options In"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StructureCostOptionRead"
                  },
                  "title": "Response Upsert Structure Cost Options Api V1 Structures  Structure Id  Cost Options Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/structures/{structure_id}/photos": {
      "get": {
        "tags": [
          "structures"
        ],
        "summary": "List Structure Photos",
        "operationId": "list_structure_photos_api_v1_structures__structure_id__photos_get",
        "parameters": [
          {
            "name": "structure_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Structure Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StructurePhotoRead"
                  },
                  "title": "Response List Structure Photos Api V1 Structures  Structure Id  Photos Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "structures"
        ],
        "summary": "Create Structure Photo",
        "operationId": "create_structure_photo_api_v1_structures__structure_id__photos_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "structure_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Structure Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StructurePhotoCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StructurePhotoRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/structures/{structure_id}/photos/{photo_id}": {
      "delete": {
        "tags": [
          "structures"
        ],
        "summary": "Delete Structure Photo",
        "operationId": "delete_structure_photo_api_v1_structures__structure_id__photos__photo_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "structure_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Structure Id"
            }
          },
          {
            "name": "photo_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Photo Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/events/{event_id}/live": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Stream Event Updates",
        "operationId": "stream_event_updates_api_v1_events__event_id__live_get",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/events/": {
      "post": {
        "tags": [
          "events"
        ],
        "summary": "Create Event",
        "operationId": "create_event_api_v1_events__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "events"
        ],
        "summary": "List Events",
        "operationId": "list_events_api_v1_events__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Page Size"
            }
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Q"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/EventStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/events/{event_id}": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Get Event",
        "operationId": "get_event_api_v1_events__event_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          },
          {
            "name": "include",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Include"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/EventWithRelations-Output"
                    },
                    {
                      "$ref": "#/components/schemas/EventRead"
                    }
                  ],
                  "title": "Response Get Event Api V1 Events  Event Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "events"
        ],
        "summary": "Update Event",
        "operationId": "update_event_api_v1_events__event_id__patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/events/{event_id}/ical": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Download Event Ical",
        "operationId": "download_event_ical_api_v1_events__event_id__ical_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/events/{event_id}/candidates": {
      "post": {
        "tags": [
          "events"
        ],
        "summary": "Add Candidate",
        "operationId": "add_candidate_api_v1_events__event_id__candidates_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCandidateCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCandidateRead-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/events/{event_id}/candidates/{candidate_id}": {
      "patch": {
        "tags": [
          "events"
        ],
        "summary": "Update Candidate",
        "operationId": "update_candidate_api_v1_events__event_id__candidates__candidate_id__patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          },
          {
            "name": "candidate_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Candidate Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCandidateUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCandidateRead-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/events/{event_id}/summary": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Get Event Summary",
        "operationId": "get_event_summary_api_v1_events__event_id__summary_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventSummary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/events/{event_id}/tasks": {
      "post": {
        "tags": [
          "events"
        ],
        "summary": "Create Task",
        "operationId": "create_task_api_v1_events__event_id__tasks_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventContactTaskCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventContactTaskRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/events/{event_id}/tasks/{task_id}": {
      "patch": {
        "tags": [
          "events"
        ],
        "summary": "Update Task",
        "operationId": "update_task_api_v1_events__event_id__tasks__task_id__patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          },
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Task Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventContactTaskUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventContactTaskRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/events/{event_id}/members": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "List Members",
        "operationId": "list_members_api_v1_events__event_id__members_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventMemberRead"
                  },
                  "title": "Response List Members Api V1 Events  Event Id  Members Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "events"
        ],
        "summary": "Add Member",
        "operationId": "add_member_api_v1_events__event_id__members_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventMemberCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventMemberRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/events/{event_id}/members/{member_id}": {
      "patch": {
        "tags": [
          "events"
        ],
        "summary": "Update Member",
        "operationId": "update_member_api_v1_events__event_id__members__member_id__patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          },
          {
            "name": "member_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Member Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventMemberUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventMemberRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "events"
        ],
        "summary": "Delete Member",
        "operationId": "delete_member_api_v1_events__event_id__members__member_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          },
          {
            "name": "member_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Member Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/events/{event_id}/suggest": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Get Suggestions",
        "operationId": "get_suggestions_api_v1_events__event_id__suggest_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventSuggestion"
                  },
                  "title": "Response Get Suggestions Api V1 Events  Event Id  Suggest Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quotes/calc": {
      "post": {
        "tags": [
          "quotes"
        ],
        "summary": "Calculate Quote",
        "operationId": "calculate_quote_api_v1_quotes_calc_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuoteCalcRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteCalcResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/events/{event_id}/quotes": {
      "post": {
        "tags": [
          "quotes"
        ],
        "summary": "Create Quote",
        "operationId": "create_quote_api_v1_events__event_id__quotes_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuoteCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "quotes"
        ],
        "summary": "List Quotes",
        "operationId": "list_quotes_api_v1_events__event_id__quotes_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuoteListItem"
                  },
                  "title": "Response List Quotes Api V1 Events  Event Id  Quotes Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quotes/{quote_id}": {
      "get": {
        "tags": [
          "quotes"
        ],
        "summary": "Get Quote",
        "operationId": "get_quote_api_v1_quotes__quote_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "quote_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Quote Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quotes/{quote_id}/export": {
      "get": {
        "tags": [
          "quotes"
        ],
        "summary": "Export Quote",
        "operationId": "export_quote_api_v1_quotes__quote_id__export_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "quote_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Quote Id"
            }
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(xlsx|html)$",
              "default": "xlsx",
              "title": "Format"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/export/structures": {
      "get": {
        "tags": [
          "export"
        ],
        "summary": "Export Structures",
        "operationId": "export_structures_api_v1_export_structures_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Format"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Filters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/export/events": {
      "get": {
        "tags": [
          "export"
        ],
        "summary": "Export Events",
        "operationId": "export_events_api_v1_export_events_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Format"
            }
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From"
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mail/preview": {
      "get": {
        "tags": [
          "mail"
        ],
        "summary": "Preview Mail Template",
        "operationId": "preview_mail_template_api_v1_mail_preview_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template",
            "in": "query",
            "required": true,
            "schema": {
              "enum": [
                "reset_password",
                "task_assigned",
                "candidate_status_changed"
              ],
              "type": "string",
              "title": "Template"
            }
          },
          {
            "name": "sample",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Sample"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailPreviewResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mail/test": {
      "post": {
        "tags": [
          "mail"
        ],
        "summary": "Send Test Mail",
        "operationId": "send_test_mail_api_v1_mail_test_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailTestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailTestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/ops/queue": {
      "get": {
        "tags": [
          "ops"
        ],
        "summary": "Queue Metrics",
        "operationId": "queue_metrics_api_v1_ops_queue_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "type": "object",
                  "title": "Response Queue Metrics Api V1 Ops Queue Get"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AttachmentConfirmRequest": {
        "properties": {
          "owner_type": {
            "$ref": "#/components/schemas/AttachmentOwnerType"
          },
          "owner_id": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Owner Id"
          },
          "filename": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Filename"
          },
          "mime": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Mime"
          },
          "size": {
            "type": "integer",
            "maximum": 5242880.0,
            "exclusiveMinimum": 0.0,
            "title": "Size"
          },
          "key": {
            "type": "string",
            "minLength": 1,
            "title": "Key"
          }
        },
        "type": "object",
        "required": [
          "owner_type",
          "owner_id",
          "filename",
          "mime",
          "size",
          "key"
        ],
        "title": "AttachmentConfirmRequest"
      },
      "AttachmentDownloadSignature": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "AttachmentDownloadSignature"
      },
      "AttachmentOwnerType": {
        "type": "string",
        "enum": [
          "structure",
          "event"
        ],
        "title": "AttachmentOwnerType"
      },
      "AttachmentRead": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "owner_type": {
            "$ref": "#/components/schemas/AttachmentOwnerType"
          },
          "owner_id": {
            "type": "integer",
            "title": "Owner Id"
          },
          "filename": {
            "type": "string",
            "title": "Filename"
          },
          "mime": {
            "type": "string",
            "title": "Mime"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "created_by_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Name"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "owner_type",
          "owner_id",
          "filename",
          "mime",
          "size",
          "created_at"
        ],
        "title": "AttachmentRead"
      },
      "AttachmentSignRequest": {
        "properties": {
          "owner_type": {
            "$ref": "#/components/schemas/AttachmentOwnerType"
          },
          "owner_id": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Owner Id"
          },
          "filename": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Filename"
          },
          "mime": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Mime"
          }
        },
        "type": "object",
        "required": [
          "owner_type",
          "owner_id",
          "filename",
          "mime"
        ],
        "title": "AttachmentSignRequest"
      },
      "AttachmentUploadSignature": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "fields": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Fields"
          }
        },
        "type": "object",
        "required": [
          "url",
          "fields"
        ],
        "title": "AttachmentUploadSignature"
      },
      "AuthResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          },
          "user": {
            "$ref": "#/components/schemas/UserRead"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "user"
        ],
        "title": "AuthResponse"
      },
      "Body_import_structure_open_periods_api_v1_import_structure_open_periods_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_import_structure_open_periods_api_v1_import_structure_open_periods_post"
      },
      "Body_import_structures_api_v1_import_structures_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_import_structures_api_v1_import_structures_post"
      },
      "ContactCreate": {
        "properties": {
          "first_name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "preferred_channel": {
            "$ref": "#/components/schemas/ContactPreferredChannel",
            "default": "email"
          },
          "is_primary": {
            "type": "boolean",
            "title": "Is Primary",
            "default": false
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "gdpr_consent_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gdpr Consent At"
          },
          "contact_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Id"
          }
        },
        "type": "object",
        "title": "ContactCreate"
      },
      "ContactPreferredChannel": {
        "type": "string",
        "enum": [
          "email",
          "phone",
          "other"
        ],
        "title": "ContactPreferredChannel"
      },
      "ContactRead": {
        "properties": {
          "first_name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "preferred_channel": {
            "$ref": "#/components/schemas/ContactPreferredChannel",
            "default": "email"
          },
          "is_primary": {
            "type": "boolean",
            "title": "Is Primary",
            "default": false
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "gdpr_consent_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gdpr Consent At"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "contact_id": {
            "type": "integer",
            "title": "Contact Id"
          },
          "structure_id": {
            "type": "integer",
            "title": "Structure Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "contact_id",
          "structure_id",
          "name",
          "created_at",
          "updated_at"
        ],
        "title": "ContactRead"
      },
      "ContactUpdate": {
        "properties": {
          "first_name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "preferred_channel": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ContactPreferredChannel"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_primary": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Primary"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "gdpr_consent_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gdpr Consent At"
          }
        },
        "type": "object",
        "title": "ContactUpdate"
      },
      "CostBand": {
        "type": "string",
        "enum": [
          "cheap",
          "medium",
          "expensive"
        ],
        "title": "CostBand"
      },
      "EventBranch": {
        "type": "string",
        "enum": [
          "LC",
          "EG",
          "RS",
          "ALL"
        ],
        "title": "EventBranch"
      },
      "EventCandidateCreate": {
        "properties": {
          "structure_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Structure Id"
          },
          "structure_slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Structure Slug"
          },
          "assigned_user": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assigned User"
          },
          "assigned_user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assigned User Id"
          },
          "contact_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Id"
          }
        },
        "type": "object",
        "title": "EventCandidateCreate"
      },
      "EventCandidateRead-Input": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "event_id": {
            "type": "integer",
            "title": "Event Id"
          },
          "structure_id": {
            "type": "integer",
            "title": "Structure Id"
          },
          "status": {
            "$ref": "#/components/schemas/EventStructureCandidateStatus"
          },
          "assigned_user": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assigned User"
          },
          "assigned_user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assigned User Id"
          },
          "assigned_user_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assigned User Name"
          },
          "contact_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Id"
          },
          "contact": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ContactRead"
              },
              {
                "type": "null"
              }
            ]
          },
          "last_update": {
            "type": "string",
            "format": "date-time",
            "title": "Last Update"
          },
          "structure": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EventCandidateStructure"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "event_id",
          "structure_id",
          "status",
          "assigned_user",
          "last_update"
        ],
        "title": "EventCandidateRead"
      },
      "EventCandidateRead-Output": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "event_id": {
            "type": "integer",
            "title": "Event Id"
          },
          "structure_id": {
            "type": "integer",
            "title": "Structure Id"
          },
          "status": {
            "$ref": "#/components/schemas/EventStructureCandidateStatus"
          },
          "assigned_user": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assigned User"
          },
          "assigned_user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assigned User Id"
          },
          "assigned_user_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assigned User Name"
          },
          "contact_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Id"
          },
          "contact": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ContactRead"
              },
              {
                "type": "null"
              }
            ]
          },
          "last_update": {
            "type": "string",
            "format": "date-time",
            "title": "Last Update"
          },
          "structure": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EventCandidateStructure"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "event_id",
          "structure_id",
          "status",
          "assigned_user",
          "last_update"
        ],
        "title": "EventCandidateRead"
      },
      "EventCandidateStructure": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "province": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Province"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "slug"
        ],
        "title": "EventCandidateStructure"
      },
      "EventCandidateUpdate": {
        "properties": {
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EventStructureCandidateStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "assigned_user": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assigned User"
          },
          "assigned_user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assigned User Id"
          },
          "contact_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Id"
          }
        },
        "type": "object",
        "title": "EventCandidateUpdate"
      },
      "EventContactTaskCreate": {
        "properties": {
          "structure_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Structure Id"
          },
          "assigned_user": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assigned User"
          },
          "assigned_user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assigned User Id"
          },
          "status": {
            "$ref": "#/components/schemas/EventContactTaskStatus",
            "default": "todo"
          },
          "outcome": {
            "$ref": "#/components/schemas/EventContactTaskOutcome",
            "default": "pending"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "EventContactTaskCreate"
      },
      "EventContactTaskOutcome": {
        "type": "string",
        "enum": [
          "pending",
          "positive",
          "negative"
        ],
        "title": "EventContactTaskOutcome"
      },
      "EventContactTaskRead": {
        "properties": {
          "structure_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Structure Id"
          },
          "assigned_user": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assigned User"
          },
          "assigned_user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assigned User Id"
          },
          "status": {
            "$ref": "#/components/schemas/EventContactTaskStatus",
            "default": "todo"
          },
          "outcome": {
            "$ref": "#/components/schemas/EventContactTaskOutcome",
            "default": "pending"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "event_id": {
            "type": "integer",
            "title": "Event Id"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "assigned_user_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assigned User Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "event_id",
          "updated_at"
        ],
        "title": "EventContactTaskRead"
      },
      "EventContactTaskStatus": {
        "type": "string",
        "enum": [
          "todo",
          "in_progress",
          "done",
          "n_a"
        ],
        "title": "EventContactTaskStatus"
      },
      "EventContactTaskUpdate": {
        "properties": {
          "structure_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Structure Id"
          },
          "assigned_user": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assigned User"
          },
          "assigned_user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assigned User Id"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EventContactTaskStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "outcome": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EventContactTaskOutcome"
              },
              {
                "type": "null"
              }
            ]
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "EventContactTaskUpdate"
      },
      "EventCreate": {
        "properties": {
          "title": {
            "type": "string",
            "minLength": 1,
            "title": "Title"
          },
          "branch": {
            "$ref": "#/components/schemas/EventBranch"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "title": "End Date"
          },
          "participants": {
            "$ref": "#/components/schemas/EventParticipants"
          },
          "budget_total": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string",
                "pattern": "^(?!^[-+.]*$)[+-]?0*\\d*\\.?\\d*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Budget Total"
          },
          "status": {
            "$ref": "#/components/schemas/EventStatus",
            "default": "draft"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "title",
          "branch",
          "start_date",
          "end_date"
        ],
        "title": "EventCreate"
      },
      "EventListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/EventRead"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "page_size"
        ],
        "title": "EventListResponse"
      },
      "EventMemberCreate": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "role": {
            "$ref": "#/components/schemas/EventMemberRole"
          }
        },
        "type": "object",
        "required": [
          "email",
          "role"
        ],
        "title": "EventMemberCreate"
      },
      "EventMemberRead": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "event_id": {
            "type": "integer",
            "title": "Event Id"
          },
          "role": {
            "$ref": "#/components/schemas/EventMemberRole"
          },
          "user": {
            "$ref": "#/components/schemas/EventMemberUser"
          }
        },
        "type": "object",
        "required": [
          "id",
          "event_id",
          "role",
          "user"
        ],
        "title": "EventMemberRead"
      },
      "EventMemberRole": {
        "type": "string",
        "enum": [
          "owner",
          "collab",
          "viewer"
        ],
        "title": "EventMemberRole"
      },
      "EventMemberUpdate": {
        "properties": {
          "role": {
            "$ref": "#/components/schemas/EventMemberRole"
          }
        },
        "type": "object",
        "required": [
          "role"
        ],
        "title": "EventMemberUpdate"
      },
      "EventMemberUser": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "name"
        ],
        "title": "EventMemberUser"
      },
      "EventParticipants": {
        "properties": {
          "lc": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Lc",
            "default": 0
          },
          "eg": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Eg",
            "default": 0
          },
          "rs": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Rs",
            "default": 0
          },
          "leaders": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Leaders",
            "default": 0
          }
        },
        "type": "object",
        "title": "EventParticipants"
      },
      "EventRead": {
        "properties": {
          "title": {
            "type": "string",
            "minLength": 1,
            "title": "Title"
          },
          "branch": {
            "$ref": "#/components/schemas/EventBranch"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "title": "End Date"
          },
          "participants": {
            "$ref": "#/components/schemas/EventParticipants"
          },
          "budget_total": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(?!^[-+.]*$)[+-]?0*\\d*\\.?\\d*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Budget Total"
          },
          "status": {
            "$ref": "#/components/schemas/EventStatus",
            "default": "draft"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "title",
          "branch",
          "start_date",
          "end_date",
          "id",
          "slug",
          "created_at",
          "updated_at"
        ],
        "title": "EventRead"
      },
      "EventStatus": {
        "type": "string",
        "enum": [
          "draft",
          "planning",
          "booked",
          "archived"
        ],
        "title": "EventStatus"
      },
      "EventStructureCandidateStatus": {
        "type": "string",
        "enum": [
          "to_contact",
          "contacting",
          "available",
          "unavailable",
          "followup",
          "confirmed",
          "option"
        ],
        "title": "EventStructureCandidateStatus"
      },
      "EventSuggestion": {
        "properties": {
          "structure_id": {
            "type": "integer",
            "title": "Structure Id"
          },
          "structure_name": {
            "type": "string",
            "title": "Structure Name"
          },
          "structure_slug": {
            "type": "string",
            "title": "Structure Slug"
          },
          "distance_km": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Distance Km"
          },
          "estimated_cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Estimated Cost"
          },
          "cost_band": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost Band"
          }
        },
        "type": "object",
        "required": [
          "structure_id",
          "structure_name",
          "structure_slug"
        ],
        "title": "EventSuggestion"
      },
      "EventSummary": {
        "properties": {
          "status_counts": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Status Counts"
          },
          "has_conflicts": {
            "type": "boolean",
            "title": "Has Conflicts"
          }
        },
        "type": "object",
        "required": [
          "status_counts",
          "has_conflicts"
        ],
        "title": "EventSummary"
      },
      "EventUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "branch": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EventBranch"
              },
              {
                "type": "null"
              }
            ]
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "participants": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EventParticipants"
              },
              {
                "type": "null"
              }
            ]
          },
          "budget_total": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string",
                "pattern": "^(?!^[-+.]*$)[+-]?0*\\d*\\.?\\d*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Budget Total"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EventStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "EventUpdate"
      },
      "EventWithRelations-Input": {
        "properties": {
          "title": {
            "type": "string",
            "minLength": 1,
            "title": "Title"
          },
          "branch": {
            "$ref": "#/components/schemas/EventBranch"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "title": "End Date"
          },
          "participants": {
            "$ref": "#/components/schemas/EventParticipants"
          },
          "budget_total": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string",
                "pattern": "^(?!^[-+.]*$)[+-]?0*\\d*\\.?\\d*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Budget Total"
          },
          "status": {
            "$ref": "#/components/schemas/EventStatus",
            "default": "draft"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "candidates": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/EventCandidateRead-Input"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Candidates"
          },
          "tasks": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/EventContactTaskRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tasks"
          }
        },
        "type": "object",
        "required": [
          "title",
          "branch",
          "start_date",
          "end_date",
          "id",
          "slug",
          "created_at",
          "updated_at"
        ],
        "title": "EventWithRelations"
      },
      "EventWithRelations-Output": {
        "properties": {
          "title": {
            "type": "string",
            "minLength": 1,
            "title": "Title"
          },
          "branch": {
            "$ref": "#/components/schemas/EventBranch"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "title": "End Date"
          },
          "participants": {
            "$ref": "#/components/schemas/EventParticipants"
          },
          "budget_total": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(?!^[-+.]*$)[+-]?0*\\d*\\.?\\d*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Budget Total"
          },
          "status": {
            "$ref": "#/components/schemas/EventStatus",
            "default": "draft"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "candidates": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/EventCandidateRead-Output"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Candidates"
          },
          "tasks": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/EventContactTaskRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tasks"
          }
        },
        "type": "object",
        "required": [
          "title",
          "branch",
          "start_date",
          "end_date",
          "id",
          "slug",
          "created_at",
          "updated_at"
        ],
        "title": "EventWithRelations"
      },
      "FirePolicy": {
        "type": "string",
        "enum": [
          "allowed",
          "with_permit",
          "forbidden"
        ],
        "title": "FirePolicy"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "MailPreviewResponse": {
        "properties": {
          "template": {
            "type": "string",
            "enum": [
              "reset_password",
              "task_assigned",
              "candidate_status_changed"
            ],
            "title": "Template"
          },
          "subject": {
            "type": "string",
            "title": "Subject"
          },
          "html": {
            "type": "string",
            "title": "Html"
          },
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "type": "object",
        "required": [
          "template",
          "subject",
          "html",
          "text"
        ],
        "title": "MailPreviewResponse"
      },
      "MailTestRequest": {
        "properties": {
          "to": {
            "type": "string",
            "format": "email",
            "title": "To"
          },
          "template": {
            "type": "string",
            "enum": [
              "reset_password",
              "task_assigned",
              "candidate_status_changed"
            ],
            "title": "Template"
          },
          "sample_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sample Data",
            "description": "Override sample data"
          }
        },
        "type": "object",
        "required": [
          "to",
          "template"
        ],
        "title": "MailTestRequest"
      },
      "MailTestResponse": {
        "properties": {
          "provider": {
            "type": "string",
            "title": "Provider"
          },
          "blocked": {
            "type": "boolean",
            "title": "Blocked"
          },
          "subject": {
            "type": "string",
            "title": "Subject"
          },
          "html": {
            "type": "string",
            "title": "Html"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "job_id": {
            "type": "string",
            "title": "Job Id"
          }
        },
        "type": "object",
        "required": [
          "provider",
          "blocked",
          "subject",
          "html",
          "text",
          "job_id"
        ],
        "title": "MailTestResponse"
      },
      "QuoteBreakdownEntry": {
        "properties": {
          "option_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Option Id"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "currency": {
            "type": "string",
            "title": "Currency"
          },
          "unit_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit Amount"
          },
          "quantity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quantity"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "total": {
            "type": "number",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "type",
          "description",
          "currency",
          "total"
        ],
        "title": "QuoteBreakdownEntry"
      },
      "QuoteCalcRequest": {
        "properties": {
          "event_id": {
            "type": "integer",
            "title": "Event Id"
          },
          "structure_id": {
            "type": "integer",
            "title": "Structure Id"
          },
          "overrides": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/QuoteOverrides"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "event_id",
          "structure_id"
        ],
        "title": "QuoteCalcRequest"
      },
      "QuoteCalcResponse": {
        "properties": {
          "currency": {
            "type": "string",
            "title": "Currency"
          },
          "totals": {
            "$ref": "#/components/schemas/QuoteTotals"
          },
          "breakdown": {
            "items": {
              "$ref": "#/components/schemas/QuoteBreakdownEntry"
            },
            "type": "array",
            "title": "Breakdown"
          },
          "scenarios": {
            "$ref": "#/components/schemas/QuoteScenarios"
          },
          "inputs": {
            "additionalProperties": true,
            "type": "object",
            "title": "Inputs"
          }
        },
        "type": "object",
        "required": [
          "currency",
          "totals",
          "breakdown",
          "scenarios",
          "inputs"
        ],
        "title": "QuoteCalcResponse"
      },
      "QuoteCreate": {
        "properties": {
          "structure_id": {
            "type": "integer",
            "title": "Structure Id"
          },
          "scenario": {
            "$ref": "#/components/schemas/QuoteScenario",
            "default": "realistic"
          },
          "overrides": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/QuoteOverrides"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "structure_id"
        ],
        "title": "QuoteCreate"
      },
      "QuoteListItem": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "event_id": {
            "type": "integer",
            "title": "Event Id"
          },
          "structure_id": {
            "type": "integer",
            "title": "Structure Id"
          },
          "structure_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Structure Name"
          },
          "scenario": {
            "$ref": "#/components/schemas/QuoteScenario"
          },
          "currency": {
            "type": "string",
            "title": "Currency"
          },
          "total": {
            "type": "number",
            "title": "Total"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "event_id",
          "structure_id",
          "scenario",
          "currency",
          "total",
          "created_at"
        ],
        "title": "QuoteListItem"
      },
      "QuoteOverrideParticipants": {
        "properties": {
          "lc": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Lc"
          },
          "eg": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Eg"
          },
          "rs": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Rs"
          },
          "leaders": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Leaders"
          }
        },
        "type": "object",
        "title": "QuoteOverrideParticipants"
      },
      "QuoteOverrides": {
        "properties": {
          "participants": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/QuoteOverrideParticipants"
              },
              {
                "type": "null"
              }
            ]
          },
          "days": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Days"
          },
          "nights": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Nights"
          }
        },
        "type": "object",
        "title": "QuoteOverrides"
      },
      "QuoteRead": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "event_id": {
            "type": "integer",
            "title": "Event Id"
          },
          "structure_id": {
            "type": "integer",
            "title": "Structure Id"
          },
          "scenario": {
            "$ref": "#/components/schemas/QuoteScenario"
          },
          "currency": {
            "type": "string",
            "title": "Currency"
          },
          "totals": {
            "$ref": "#/components/schemas/QuoteTotals"
          },
          "breakdown": {
            "items": {
              "$ref": "#/components/schemas/QuoteBreakdownEntry"
            },
            "type": "array",
            "title": "Breakdown"
          },
          "inputs": {
            "additionalProperties": true,
            "type": "object",
            "title": "Inputs"
          },
          "scenarios": {
            "$ref": "#/components/schemas/QuoteScenarios"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "event_id",
          "structure_id",
          "scenario",
          "currency",
          "totals",
          "breakdown",
          "inputs",
          "scenarios",
          "created_at"
        ],
        "title": "QuoteRead"
      },
      "QuoteScenario": {
        "type": "string",
        "enum": [
          "best",
          "realistic",
          "worst"
        ],
        "title": "QuoteScenario"
      },
      "QuoteScenarios": {
        "properties": {
          "best": {
            "type": "number",
            "title": "Best"
          },
          "realistic": {
            "type": "number",
            "title": "Realistic"
          },
          "worst": {
            "type": "number",
            "title": "Worst"
          }
        },
        "type": "object",
        "required": [
          "best",
          "realistic",
          "worst"
        ],
        "title": "QuoteScenarios"
      },
      "QuoteTotals": {
        "properties": {
          "subtotal": {
            "type": "number",
            "title": "Subtotal"
          },
          "utilities": {
            "type": "number",
            "title": "Utilities"
          },
          "city_tax": {
            "type": "number",
            "title": "City Tax"
          },
          "deposit": {
            "type": "number",
            "title": "Deposit"
          },
          "total": {
            "type": "number",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "subtotal",
          "utilities",
          "city_tax",
          "deposit",
          "total"
        ],
        "title": "QuoteTotals"
      },
      "RefreshResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          }
        },
        "type": "object",
        "required": [
          "access_token"
        ],
        "title": "RefreshResponse"
      },
      "RegisterRequest": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "title": "RegisterRequest"
      },
      "ResetPasswordRequest": {
        "properties": {
          "token": {
            "type": "string",
            "minLength": 1,
            "title": "Token"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "token",
          "password"
        ],
        "title": "ResetPasswordRequest"
      },
      "StructureAvailabilityCreate": {
        "properties": {
          "season": {
            "$ref": "#/components/schemas/StructureSeason"
          },
          "units": {
            "items": {
              "$ref": "#/components/schemas/StructureUnit"
            },
            "type": "array",
            "title": "Units"
          },
          "capacity_min": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Capacity Min"
          },
          "capacity_max": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Capacity Max"
          }
        },
        "type": "object",
        "required": [
          "season"
        ],
        "title": "StructureAvailabilityCreate"
      },
      "StructureAvailabilityRead": {
        "properties": {
          "season": {
            "$ref": "#/components/schemas/StructureSeason"
          },
          "units": {
            "items": {
              "$ref": "#/components/schemas/StructureUnit"
            },
            "type": "array",
            "title": "Units"
          },
          "capacity_min": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Capacity Min"
          },
          "capacity_max": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Capacity Max"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "season",
          "id"
        ],
        "title": "StructureAvailabilityRead"
      },
      "StructureAvailabilityUpdate": {
        "properties": {
          "season": {
            "$ref": "#/components/schemas/StructureSeason"
          },
          "units": {
            "items": {
              "$ref": "#/components/schemas/StructureUnit"
            },
            "type": "array",
            "title": "Units"
          },
          "capacity_min": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Capacity Min"
          },
          "capacity_max": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Capacity Max"
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "season"
        ],
        "title": "StructureAvailabilityUpdate"
      },
      "StructureCostModel": {
        "type": "string",
        "enum": [
          "per_person_day",
          "per_person_night",
          "forfait"
        ],
        "title": "StructureCostModel"
      },
      "StructureCostOptionCreate": {
        "properties": {
          "model": {
            "$ref": "#/components/schemas/StructureCostModel"
          },
          "amount": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "string",
                "pattern": "^(?!^[-+.]*$)[+-]?0*\\d*\\.?\\d*$"
              }
            ],
            "title": "Amount"
          },
          "currency": {
            "type": "string",
            "maxLength": 3,
            "minLength": 3,
            "title": "Currency",
            "default": "EUR"
          },
          "deposit": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string",
                "pattern": "^(?!^[-+.]*$)[+-]?0*\\d*\\.?\\d*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deposit"
          },
          "city_tax_per_night": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string",
                "pattern": "^(?!^[-+.]*$)[+-]?0*\\d*\\.?\\d*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "City Tax Per Night"
          },
          "utilities_flat": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string",
                "pattern": "^(?!^[-+.]*$)[+-]?0*\\d*\\.?\\d*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Utilities Flat"
          },
          "age_rules": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Age Rules"
          }
        },
        "type": "object",
        "required": [
          "model",
          "amount"
        ],
        "title": "StructureCostOptionCreate"
      },
      "StructureCostOptionRead": {
        "properties": {
          "model": {
            "$ref": "#/components/schemas/StructureCostModel"
          },
          "amount": {
            "type": "string",
            "pattern": "^(?!^[-+.]*$)[+-]?0*\\d*\\.?\\d*$",
            "title": "Amount"
          },
          "currency": {
            "type": "string",
            "maxLength": 3,
            "minLength": 3,
            "title": "Currency",
            "default": "EUR"
          },
          "deposit": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(?!^[-+.]*$)[+-]?0*\\d*\\.?\\d*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deposit"
          },
          "city_tax_per_night": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(?!^[-+.]*$)[+-]?0*\\d*\\.?\\d*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "City Tax Per Night"
          },
          "utilities_flat": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(?!^[-+.]*$)[+-]?0*\\d*\\.?\\d*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Utilities Flat"
          },
          "age_rules": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Age Rules"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "model",
          "amount",
          "id"
        ],
        "title": "StructureCostOptionRead"
      },
      "StructureCostOptionUpdate": {
        "properties": {
          "model": {
            "$ref": "#/components/schemas/StructureCostModel"
          },
          "amount": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "string",
                "pattern": "^(?!^[-+.]*$)[+-]?0*\\d*\\.?\\d*$"
              }
            ],
            "title": "Amount"
          },
          "currency": {
            "type": "string",
            "maxLength": 3,
            "minLength": 3,
            "title": "Currency",
            "default": "EUR"
          },
          "deposit": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string",
                "pattern": "^(?!^[-+.]*$)[+-]?0*\\d*\\.?\\d*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deposit"
          },
          "city_tax_per_night": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string",
                "pattern": "^(?!^[-+.]*$)[+-]?0*\\d*\\.?\\d*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "City Tax Per Night"
          },
          "utilities_flat": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string",
                "pattern": "^(?!^[-+.]*$)[+-]?0*\\d*\\.?\\d*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Utilities Flat"
          },
          "age_rules": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Age Rules"
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "model",
          "amount"
        ],
        "title": "StructureCostOptionUpdate"
      },
      "StructureCreate": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Name"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "province": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Province"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude"
          },
          "altitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Altitude"
          },
          "type": {
            "$ref": "#/components/schemas/StructureType"
          },
          "indoor_beds": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Indoor Beds"
          },
          "indoor_bathrooms": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Indoor Bathrooms"
          },
          "indoor_showers": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Indoor Showers"
          },
          "indoor_activity_rooms": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Indoor Activity Rooms"
          },
          "has_kitchen": {
            "type": "boolean",
            "title": "Has Kitchen",
            "default": false
          },
          "hot_water": {
            "type": "boolean",
            "title": "Hot Water",
            "default": false
          },
          "land_area_m2": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Land Area M2"
          },
          "shelter_on_field": {
            "type": "boolean",
            "title": "Shelter On Field",
            "default": false
          },
          "water_sources": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/WaterSource"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Water Sources"
          },
          "electricity_available": {
            "type": "boolean",
            "title": "Electricity Available",
            "default": false
          },
          "fire_policy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FirePolicy"
              },
              {
                "type": "null"
              }
            ]
          },
          "access_by_car": {
            "type": "boolean",
            "title": "Access By Car",
            "default": false
          },
          "access_by_coach": {
            "type": "boolean",
            "title": "Access By Coach",
            "default": false
          },
          "access_by_public_transport": {
            "type": "boolean",
            "title": "Access By Public Transport",
            "default": false
          },
          "coach_turning_area": {
            "type": "boolean",
            "title": "Coach Turning Area",
            "default": false
          },
          "nearest_bus_stop": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Nearest Bus Stop"
          },
          "weekend_only": {
            "type": "boolean",
            "title": "Weekend Only",
            "default": false
          },
          "has_field_poles": {
            "type": "boolean",
            "title": "Has Field Poles",
            "default": false
          },
          "pit_latrine_allowed": {
            "type": "boolean",
            "title": "Pit Latrine Allowed",
            "default": false
          },
          "website_urls": {
            "items": {
              "type": "string",
              "minLength": 1,
              "format": "uri"
            },
            "type": "array",
            "title": "Website Urls"
          },
          "notes_logistics": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes Logistics"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "open_periods": {
            "items": {
              "$ref": "#/components/schemas/StructureOpenPeriodCreate"
            },
            "type": "array",
            "title": "Open Periods"
          }
        },
        "type": "object",
        "required": [
          "name",
          "slug",
          "type"
        ],
        "title": "StructureCreate"
      },
      "StructureOpenPeriodCreate": {
        "properties": {
          "kind": {
            "$ref": "#/components/schemas/StructureOpenPeriodKind"
          },
          "season": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StructureOpenPeriodSeason"
              },
              {
                "type": "null"
              }
            ]
          },
          "date_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Start"
          },
          "date_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date End"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "units": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/StructureUnit"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Units"
          }
        },
        "type": "object",
        "required": [
          "kind"
        ],
        "title": "StructureOpenPeriodCreate"
      },
      "StructureOpenPeriodKind": {
        "type": "string",
        "enum": [
          "season",
          "range"
        ],
        "title": "StructureOpenPeriodKind"
      },
      "StructureOpenPeriodRead": {
        "properties": {
          "kind": {
            "$ref": "#/components/schemas/StructureOpenPeriodKind"
          },
          "season": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StructureOpenPeriodSeason"
              },
              {
                "type": "null"
              }
            ]
          },
          "date_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Start"
          },
          "date_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date End"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "units": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/StructureUnit"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Units"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "kind",
          "id"
        ],
        "title": "StructureOpenPeriodRead"
      },
      "StructureOpenPeriodSeason": {
        "type": "string",
        "enum": [
          "spring",
          "summer",
          "autumn",
          "winter"
        ],
        "title": "StructureOpenPeriodSeason"
      },
      "StructureOpenPeriodUpdate": {
        "properties": {
          "kind": {
            "$ref": "#/components/schemas/StructureOpenPeriodKind"
          },
          "season": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StructureOpenPeriodSeason"
              },
              {
                "type": "null"
              }
            ]
          },
          "date_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Start"
          },
          "date_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date End"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "units": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/StructureUnit"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Units"
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "kind"
        ],
        "title": "StructureOpenPeriodUpdate"
      },
      "StructurePhotoCreate": {
        "properties": {
          "attachment_id": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Attachment Id"
          }
        },
        "type": "object",
        "required": [
          "attachment_id"
        ],
        "title": "StructurePhotoCreate"
      },
      "StructurePhotoRead": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "structure_id": {
            "type": "integer",
            "title": "Structure Id"
          },
          "attachment_id": {
            "type": "integer",
            "title": "Attachment Id"
          },
          "filename": {
            "type": "string",
            "title": "Filename"
          },
          "mime": {
            "type": "string",
            "title": "Mime"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          },
          "position": {
            "type": "integer",
            "title": "Position"
          },
          "url": {
            "type": "string",
            "minLength": 1,
            "format": "uri",
            "title": "Url"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "structure_id",
          "attachment_id",
          "filename",
          "mime",
          "size",
          "position",
          "url",
          "created_at"
        ],
        "title": "StructurePhotoRead"
      },
      "StructureRead": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Name"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "province": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Province"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude"
          },
          "altitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Altitude"
          },
          "type": {
            "$ref": "#/components/schemas/StructureType"
          },
          "indoor_beds": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Indoor Beds"
          },
          "indoor_bathrooms": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Indoor Bathrooms"
          },
          "indoor_showers": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Indoor Showers"
          },
          "indoor_activity_rooms": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Indoor Activity Rooms"
          },
          "has_kitchen": {
            "type": "boolean",
            "title": "Has Kitchen",
            "default": false
          },
          "hot_water": {
            "type": "boolean",
            "title": "Hot Water",
            "default": false
          },
          "land_area_m2": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Land Area M2"
          },
          "shelter_on_field": {
            "type": "boolean",
            "title": "Shelter On Field",
            "default": false
          },
          "water_sources": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/WaterSource"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Water Sources"
          },
          "electricity_available": {
            "type": "boolean",
            "title": "Electricity Available",
            "default": false
          },
          "fire_policy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FirePolicy"
              },
              {
                "type": "null"
              }
            ]
          },
          "access_by_car": {
            "type": "boolean",
            "title": "Access By Car",
            "default": false
          },
          "access_by_coach": {
            "type": "boolean",
            "title": "Access By Coach",
            "default": false
          },
          "access_by_public_transport": {
            "type": "boolean",
            "title": "Access By Public Transport",
            "default": false
          },
          "coach_turning_area": {
            "type": "boolean",
            "title": "Coach Turning Area",
            "default": false
          },
          "nearest_bus_stop": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Nearest Bus Stop"
          },
          "weekend_only": {
            "type": "boolean",
            "title": "Weekend Only",
            "default": false
          },
          "has_field_poles": {
            "type": "boolean",
            "title": "Has Field Poles",
            "default": false
          },
          "pit_latrine_allowed": {
            "type": "boolean",
            "title": "Pit Latrine Allowed",
            "default": false
          },
          "website_urls": {
            "items": {
              "type": "string",
              "minLength": 1,
              "format": "uri"
            },
            "type": "array",
            "title": "Website Urls"
          },
          "notes_logistics": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes Logistics"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "estimated_cost": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(?!^[-+.]*$)[+-]?0*\\d*\\.?\\d*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Estimated Cost"
          },
          "cost_band": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CostBand"
              },
              {
                "type": "null"
              }
            ]
          },
          "availabilities": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/StructureAvailabilityRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Availabilities"
          },
          "cost_options": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/StructureCostOptionRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost Options"
          },
          "contacts": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ContactRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contacts"
          },
          "open_periods": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/StructureOpenPeriodRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Open Periods"
          }
        },
        "type": "object",
        "required": [
          "name",
          "slug",
          "type",
          "id",
          "created_at"
        ],
        "title": "StructureRead"
      },
      "StructureSearchItem": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "province": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Province"
          },
          "type": {
            "$ref": "#/components/schemas/StructureType"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude"
          },
          "altitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Altitude"
          },
          "distance_km": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Distance Km"
          },
          "estimated_cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Estimated Cost"
          },
          "cost_band": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CostBand"
              },
              {
                "type": "null"
              }
            ]
          },
          "seasons": {
            "items": {
              "$ref": "#/components/schemas/StructureSeason"
            },
            "type": "array",
            "title": "Seasons"
          },
          "units": {
            "items": {
              "$ref": "#/components/schemas/StructureUnit"
            },
            "type": "array",
            "title": "Units"
          },
          "fire_policy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FirePolicy"
              },
              {
                "type": "null"
              }
            ]
          },
          "access_by_car": {
            "type": "boolean",
            "title": "Access By Car",
            "default": false
          },
          "access_by_coach": {
            "type": "boolean",
            "title": "Access By Coach",
            "default": false
          },
          "access_by_public_transport": {
            "type": "boolean",
            "title": "Access By Public Transport",
            "default": false
          },
          "has_kitchen": {
            "type": "boolean",
            "title": "Has Kitchen",
            "default": false
          },
          "hot_water": {
            "type": "boolean",
            "title": "Hot Water",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "slug",
          "name",
          "type"
        ],
        "title": "StructureSearchItem"
      },
      "StructureSearchResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/StructureSearchItem"
            },
            "type": "array",
            "title": "Items"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "sort": {
            "type": "string",
            "title": "Sort"
          },
          "order": {
            "type": "string",
            "title": "Order"
          },
          "base_coords": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Base Coords"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "page_size",
          "total",
          "sort",
          "order",
          "base_coords"
        ],
        "title": "StructureSearchResponse"
      },
      "StructureSeason": {
        "type": "string",
        "enum": [
          "winter",
          "spring",
          "summer",
          "autumn"
        ],
        "title": "StructureSeason"
      },
      "StructureType": {
        "type": "string",
        "enum": [
          "house",
          "land",
          "mixed"
        ],
        "title": "StructureType"
      },
      "StructureUnit": {
        "type": "string",
        "enum": [
          "LC",
          "EG",
          "RS",
          "ALL"
        ],
        "title": "StructureUnit"
      },
      "StructureUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Name"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "province": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Province"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude"
          },
          "altitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Altitude"
          },
          "type": {
            "$ref": "#/components/schemas/StructureType"
          },
          "indoor_beds": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Indoor Beds"
          },
          "indoor_bathrooms": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Indoor Bathrooms"
          },
          "indoor_showers": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Indoor Showers"
          },
          "indoor_activity_rooms": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Indoor Activity Rooms"
          },
          "has_kitchen": {
            "type": "boolean",
            "title": "Has Kitchen",
            "default": false
          },
          "hot_water": {
            "type": "boolean",
            "title": "Hot Water",
            "default": false
          },
          "land_area_m2": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Land Area M2"
          },
          "shelter_on_field": {
            "type": "boolean",
            "title": "Shelter On Field",
            "default": false
          },
          "water_sources": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/WaterSource"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Water Sources"
          },
          "electricity_available": {
            "type": "boolean",
            "title": "Electricity Available",
            "default": false
          },
          "fire_policy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FirePolicy"
              },
              {
                "type": "null"
              }
            ]
          },
          "access_by_car": {
            "type": "boolean",
            "title": "Access By Car",
            "default": false
          },
          "access_by_coach": {
            "type": "boolean",
            "title": "Access By Coach",
            "default": false
          },
          "access_by_public_transport": {
            "type": "boolean",
            "title": "Access By Public Transport",
            "default": false
          },
          "coach_turning_area": {
            "type": "boolean",
            "title": "Coach Turning Area",
            "default": false
          },
          "nearest_bus_stop": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Nearest Bus Stop"
          },
          "weekend_only": {
            "type": "boolean",
            "title": "Weekend Only",
            "default": false
          },
          "has_field_poles": {
            "type": "boolean",
            "title": "Has Field Poles",
            "default": false
          },
          "pit_latrine_allowed": {
            "type": "boolean",
            "title": "Pit Latrine Allowed",
            "default": false
          },
          "website_urls": {
            "items": {
              "type": "string",
              "minLength": 1,
              "format": "uri"
            },
            "type": "array",
            "title": "Website Urls"
          },
          "notes_logistics": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes Logistics"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "open_periods": {
            "items": {
              "$ref": "#/components/schemas/StructureOpenPeriodUpdate"
            },
            "type": "array",
            "title": "Open Periods"
          }
        },
        "type": "object",
        "required": [
          "name",
          "slug",
          "type"
        ],
        "title": "StructureUpdate"
      },
      "UserRead": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "User identifier"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "is_admin": {
            "type": "boolean",
            "title": "Is Admin",
            "default": false
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "name",
          "created_at"
        ],
        "title": "UserRead"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "WaterSource": {
        "type": "string",
        "enum": [
          "none",
          "fountain",
          "tap",
          "river"
        ],
        "title": "WaterSource"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
