version: "3.9"

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: scouthouse
      POSTGRES_USER: scout
      POSTGRES_PASSWORD: scout
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scout"]
      interval: 5s
      timeout: 5s
      retries: 5

  cache:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  adminer:
    image: adminer:4
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - db

  api:
    build:
      context: ./backend
    env_file:
      - ./backend/.env
    environment:
      DATABASE_URL: postgresql+psycopg://scout:scout@db:5432/scouthouse
    volumes:
      - ./backend/app:/app/app
      - ./backend/migrations:/app/migrations
    ports:
      - "8000:8000"
    command: >
      sh -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/api/v1/health/ready || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s

  backup:
    build:
      context: ./infra/backup
    env_file:
      - ./.env
    environment:
      DATABASE_URL: postgresql://scout:scout@db:5432/scouthouse
    volumes:
      - backup_data:/backups
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  web:
    build:
      context: ./frontend
    env_file:
      - ./frontend/.env
    environment:
      VITE_API_URL: http://api:8000
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/vite.config.ts:/app/vite.config.ts
      - ./frontend/tsconfig.json:/app/tsconfig.json
      - ./frontend/package.json:/app/package.json
      - ./frontend/package-lock.json:/app/package-lock.json
    ports:
      - "5173:5173"
    command: npm run dev -- --host 0.0.0.0 --port 5173
    depends_on:
      - api

volumes:
  db_data:
  backup_data:
