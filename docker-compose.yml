services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      APP_DB_USER: scout
      APP_DB_PASSWORD: scout
      APP_DB_NAME: scouthouse
    ports:
      - "5432:5432"
    volumes:
      - scouthouse_db_data:/var/lib/postgresql/data
      - ./infra/db/init.sql:/docker-entrypoint-initdb.d/10-init.sql:ro
      - ./infra/db/init.sh:/docker-entrypoint-initdb.d/10-init.sh:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d scouthouse"]
      interval: 5s
      timeout: 3s
      retries: 20

  db-bootstrap:
    image: postgres:16
    entrypoint: ["/bin/bash", "-lc", "/bootstrap/20-bootstrap.sh"]
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST:-db}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      DB_APP_USER: ${DB_APP_USER:-scout}
      DB_APP_PASSWORD: ${DB_APP_PASSWORD:-scout}
    volumes:
      - ./docker/db/bootstrap:/bootstrap:ro
    depends_on:
      db:
        condition: service_healthy
    restart: "no"

  cache:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  adminer:
    image: adminer:4
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - db

  api:
    build:
      context: ./backend
    env_file:
      - ./backend/.env
    environment:
      DATABASE_URL: postgresql+psycopg://scout:scout@db:5432/scouthouse
      CORS_ALLOWED_ORIGINS: '["http://localhost:5173","http://127.0.0.1:5173"]'
      RUN_DB_MIGRATIONS: "false"
    volumes:
      - ./backend/app:/app/app
      - ./backend/migrations:/app/migrations
    ports:
      - "8000:8000"
    depends_on:
      migrate:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/api/v1/health/ready || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s

  worker:
    image: scouthouse-worker
    build:
      context: ./backend
    environment:
      - DATABASE_URL=postgresql+psycopg://scout:scout@db:5432/scouthouse
      - REDIS_URL=${REDIS_URL:-redis://cache:6379/0}
      - RQ_QUEUE_NAME=${RQ_QUEUE_NAME:-scouthouse}
      - SENTRY_DSN=${SENTRY_DSN:-}
      - SENTRY_TRACES_SAMPLE_RATE=${SENTRY_TRACES_SAMPLE_RATE:-0.0}
      - MAIL_PROVIDER=${MAIL_PROVIDER:-console}
      - SMTP_HOST=${SMTP_HOST:-}
      - SMTP_PORT=${SMTP_PORT:-}
      - SMTP_USER=${SMTP_USER:-}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY:-}
      - RUN_DB_MIGRATIONS=false
    depends_on:
      - cache
      - migrate
    command: ["sh", "-lc", "rq worker -u ${REDIS_URL:-redis://cache:6379/0} ${RQ_QUEUE_NAME:-scouthouse}"]
    restart: unless-stopped

  migrate:
    build:
      context: ./backend
    env_file:
      - ./backend/.env
    environment:
      DATABASE_URL: postgresql+psycopg://scout:scout@db:5432/scouthouse
      RUN_DB_MIGRATIONS: "false"
    depends_on:
      db:
        condition: service_healthy
      db-bootstrap:
        condition: service_completed_successfully
    command: ["/app/scripts/run-migrations.sh"]
    restart: "no"

  backup:
    build:
      context: ./infra/backup
    environment:
      POSTGRES_HOST: db
      POSTGRES_DB: scouthouse
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      BACKUP_CRON: "0 2 * * *"
    volumes:
      - backup_data:/backups
    depends_on:
      db:
        condition: service_healthy
      db-bootstrap:
        condition: service_completed_successfully
    restart: unless-stopped

  web:
    build:
      context: ./frontend
    env_file:
      - ./frontend/.env
    environment:
      VITE_API_URL: http://api:8000
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/vite.config.ts:/app/vite.config.ts
      - ./frontend/tsconfig.json:/app/tsconfig.json
      - ./frontend/package.json:/app/package.json
      - ./frontend/package-lock.json:/app/package-lock.json
    ports:
      - "5173:5173"
    command: npm run dev -- --host 0.0.0.0 --port 5173
    depends_on:
      - api

volumes:
  scouthouse_db_data:
  backup_data:
